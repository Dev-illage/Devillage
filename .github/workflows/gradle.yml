# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches:
      - main

env:
  S3_BUCKET_NAME: devillage-deploy
  RESOURCE_PATH: ./src/main/resources/application.yml
  CODE_DEPLOY_APPLICATION_NAME: devillage
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: devillage-auto

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
        
        # [1] application.yml 생성
      - name: Set yaml file 
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.RESOURCE_PATH }} 
        env:
          spring.datasource.url: ${{ secrets.RDS_URL }}
          spring.datasource.username: ${{ secrets.RDS_ID }}
          spring.datasource.password: ${{ secrets.RDS_PASSWORD }}
          spring.redis.host: ${{ secrets.REDIS_URL }}
          spring.redis.port: ${{ secrets.REDIS_PORT }}
          spring.mail.host: ${{ secrets.MAIL_HOST }}
          spring.mail.port: ${{ secrets.MAIL_PORT }}
          spring.mail.username: ${{ secrets.MAIL_ID }}
          spring.mail.password: ${{ secrets.MAIL_PASSWORD }}
          spring.security.oauth2.client.registration.github.client-id: ${{ secrets.OAUTH_GITHUB_ID }}
          spring.security.oauth2.client.registration.github.password: ${{ secrets.OAUTH_GITHUB_PASSWORD }}
          spring.security.oauth2.client.registration.google.client-id: ${{ secrets.OAUTH_GOOGLE_ID }}
          spring.security.oauth2.client.registration.google.password: ${{ secrets.OAUTH_GOOGLE_PASSWORD }}
          jwt.secretKey: ${{ secrets.SECURITY_SECRET_KEY }}
          jwt.refreshKey: ${{ secrets.SECURITY_REFRESH_KEY }}
          cloud.aws.credentials.accessKey: ${{ secrets.AWS_IMAGE_ACCESS_KEY }}
          cloud.aws.credentials.secretKey: ${{ secrets.AWS_IMAGE_SECRET_KEY }}
          cloud.aws.s3.bucket: ${{ secrets.AWS_IMAGE_BUCKET_NAME }}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

        # [2] build
      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

        # [3] save build
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

        # [4] aws 권한
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: ${{ secrets.AWS_REGION }} 

        # [5] upload
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip

        # [6] deploy
      - name: Code Deploy
        run: | 
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip
